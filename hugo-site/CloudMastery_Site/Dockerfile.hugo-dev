# Dockerfile.hugo-dev â€“ Local Development with Hugo Live Server
# Provides fast rebuilds, hot reload, mounts local volume for editing

FROM alpine:latest

# Install dependencies
# RUN apk add --no-cache git go curl gcompat libc6-compat libstdc++
RUN apk add --no-cache \
    curl git go libc6-compat gcompat libstdc++ \
    bash tar

# Set the Hugo version
ARG HUGO_VERSION=0.122.0

# Platform-aware Hugo install (ARM64 or AMD64)
WORKDIR /tmp

RUN set -ex && \
    arch=$(uname -m) && \
    if [ "$arch" = "aarch64" ]; then \
        curl -LO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-ARM64.tar.gz && \
        tar -xzf hugo_extended_${HUGO_VERSION}_Linux-ARM64.tar.gz; \
    else \
        curl -LO https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz && \
        tar -xzf hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz; \
    fi && \
    mv hugo /usr/bin/hugo && chmod +x /usr/bin/hugo && \
    rm -f hugo_extended_${HUGO_VERSION}_*.tar.gz LICENSE README.md

# Verify Hugo installation
RUN hugo version

WORKDIR /src

# Don't copy files - we'll mount them as a volume
# COPY . .

EXPOSE 8888

# command: hugo server --bind 0.0.0.0 --port 8888 -D --baseURL http://localhost:8888
CMD ["hugo", "server", "--bind", "0.0.0.0", "--port", "8888", "-D", "--baseURL", "http://localhost:8888", "--config", "hugo.toml"]
